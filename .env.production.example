# ================================================================================================
# RIVAL OUTRANKER - PRODUCTION ENVIRONMENT
# ================================================================================================
# CRITICAL: This is your production environment configuration
# SECURITY: Never commit actual production values to version control
# ================================================================================================

# ================================================================================================
# CORE APPLICATION SETTINGS
# ================================================================================================

NODE_ENV=production
PORT=5001
API_BASE_URL=https://api.yourdomain.com
FRONTEND_URL=https://yourdomain.com

# ================================================================================================
# DATABASE CONFIGURATION
# ================================================================================================

# Production PostgreSQL Database
# Use managed database service (Railway, AWS RDS, DigitalOcean, etc.)
# CRITICAL: Use SSL connection and strong credentials
DATABASE_URL=postgresql://username:secure_password@prod-db.host.com:5432/rival_outranker_prod

# ================================================================================================
# SECURITY SETTINGS - CRITICAL
# ================================================================================================

# CRITICAL: Generate cryptographically secure secrets
# Use: openssl rand -base64 32
# NEVER use development defaults in production
JWT_SECRET=REPLACE_WITH_CRYPTOGRAPHICALLY_SECURE_SECRET_MIN_32_CHARS
SESSION_SECRET=REPLACE_WITH_DIFFERENT_CRYPTOGRAPHICALLY_SECURE_SECRET

# Use strong password hashing
BCRYPT_ROUNDS=12

# ================================================================================================
# CORS & SECURITY
# ================================================================================================

# CRITICAL: Restrict CORS to your actual domains only
CORS_ORIGIN=https://yourdomain.com,https://www.yourdomain.com
SECURE_COOKIES=true

# ================================================================================================
# PRODUCTION LOGGING
# ================================================================================================

LOG_LEVEL=warn
ENABLE_REQUEST_LOGGING=false
DEBUG_MODE=false
DEBUG_DATABASE_QUERIES=false

# Error Monitoring (Recommended)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ================================================================================================
# RATE LIMITING (Production Settings)
# ================================================================================================

RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ================================================================================================
# PRODUCTION API SERVICES
# ================================================================================================

# OpenAI API (Production Key with Usage Monitoring)
# Monitor costs and set usage limits
OPENAI_API_KEY=sk-proj-production-openai-api-key-with-limits
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=2000

# DataForSEO API (Production Account)
# Monitor costs and usage
DATAFORSEO_API_LOGIN=production_username
DATAFORSEO_API_PASSWORD=production_password

# Google APIs (Production Project)
GOOGLE_API_KEY=production_google_api_key
GOOGLE_SEARCH_API_KEY=production_search_api_key
GOOGLE_SEARCH_ENGINE_ID=production_search_engine_id

# Google Ads API (Full Production Setup)
GOOGLE_ADS_CLIENT_ID=production_google_ads_client_id
GOOGLE_ADS_CLIENT_SECRET=production_google_ads_client_secret
GOOGLE_ADS_REFRESH_TOKEN=production_google_ads_refresh_token
GOOGLE_ADS_DEVELOPER_TOKEN=production_google_ads_developer_token
GOOGLE_ADS_CUSTOMER_ID=production_customer_id

# ================================================================================================
# EMAIL SERVICES (Production SMTP)
# ================================================================================================

# Production Email Service (SendGrid, AWS SES, etc.)
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=apikey
SMTP_PASS=production_sendgrid_api_key

EMAIL_FROM=noreply@yourdomain.com
EMAIL_FROM_NAME=Rival Outranker

# ================================================================================================
# CLOUD STORAGE (Production)
# ================================================================================================

# Production AWS S3 Configuration
AWS_ACCESS_KEY_ID=production_aws_access_key
AWS_SECRET_ACCESS_KEY=production_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=rival-outranker-production

MAX_FILE_SIZE=52428800

# ================================================================================================
# FEATURE FLAGS (Production Ready)
# ================================================================================================

FEATURE_AI_ANALYSIS=true
FEATURE_REALTIME_TRACKING=false
FEATURE_ADVANCED_REPORTS=true
FEATURE_LEARNING_SYSTEM=true
FEATURE_PDF_EXPORT=true
FEATURE_EXCEL_EXPORT=true

# ================================================================================================
# PRODUCTION INTEGRATIONS
# ================================================================================================

# Production Webhook URLs
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/PROD/SLACK/WEBHOOK
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/PROD/DISCORD/WEBHOOK

# Production Analytics
GOOGLE_ANALYTICS_ID=GA-PRODUCTION-ID
MIXPANEL_TOKEN=production_mixpanel_token

# ================================================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ================================================================================================
# Before Deploying to Production:
#
# SECURITY:
# □ All secrets are cryptographically secure (min 32 chars)
# □ No development defaults remain
# □ CORS origins are restricted to actual domains
# □ HTTPS is enforced everywhere
# □ Database uses SSL connection
# □ Environment variables are stored securely (not in code)
#
# MONITORING:
# □ Error monitoring is configured (Sentry)
# □ Log level is set to 'warn' or 'error'
# □ Analytics tracking is configured
# □ API usage monitoring is set up
#
# PERFORMANCE:
# □ Rate limiting is properly configured
# □ Database is properly indexed
# □ CDN is configured for static assets
# □ Caching strategies are implemented
#
# BACKUP & RECOVERY:
# □ Database backups are automated
# □ File storage backups are configured
# □ Recovery procedures are documented and tested
#
# COMPLIANCE:
# □ Privacy policy is in place
# □ Terms of service are configured
# □ Data retention policies are implemented
# □ GDPR/CCPA compliance is addressed (if applicable)
#
# API COSTS:
# □ OpenAI usage limits are set
# □ DataForSEO quotas are monitored
# □ Google API quotas are appropriate
# □ Cost monitoring alerts are configured
#
# DOMAINS & SSL:
# □ Domain is properly configured
# □ SSL certificates are installed and auto-renewing
# □ DNS records point to production servers
# □ Redirect rules are configured (www to non-www, etc.)
#
# POST-DEPLOYMENT:
# □ All features work as expected
# □ User registration/login flows work
# □ SEO analysis functionality works
# □ PDF/Excel exports generate correctly
# □ Email notifications are sent
# □ Error monitoring receives test alerts
# □ Performance meets expectations
# □ Security scan shows no vulnerabilities
#
# ================================================================================================
# PRODUCTION SECURITY NOTES
# ================================================================================================
# 
# SECRET MANAGEMENT:
# - Store all secrets in your hosting platform's secure environment variable system
# - Railway: Use the Variables tab in dashboard
# - AWS: Use Systems Manager Parameter Store or Secrets Manager
# - Google Cloud: Use Secret Manager
# - Never commit production secrets to code repository
#
# ACCESS CONTROL:
# - Limit access to production environment variables
# - Use separate accounts/keys for production vs staging
# - Regularly rotate secrets (quarterly recommended)
# - Monitor access logs for unauthorized changes
#
# API SECURITY:
# - Set usage limits on all external API keys
# - Monitor API costs and usage patterns
# - Use least-privilege access for service accounts
# - Implement proper error handling to avoid data leaks
#
# DATABASE SECURITY:
# - Use managed database service with automatic backups
# - Enable SSL/TLS for all database connections
# - Restrict database access to application servers only
# - Regularly update database software
#
# MONITORING:
# - Set up alerts for unusual API usage
# - Monitor application errors and performance
# - Track authentication failures and suspicious activity
# - Monitor costs across all external services
#
# ================================================================================================